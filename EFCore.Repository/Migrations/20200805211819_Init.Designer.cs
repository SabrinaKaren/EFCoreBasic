// <auto-generated />
using System;
using EFCore.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCore.Repository.Migrations
{
    [DbContext(typeof(HeroiContext))]
    [Migration("20200805211819_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCore.Domain.Arma", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("heroiId")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("heroiId");

                    b.ToTable("armas");
                });

            modelBuilder.Entity("EFCore.Domain.Batalha", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("batalhas");
                });

            modelBuilder.Entity("EFCore.Domain.Heroi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("herois");
                });

            modelBuilder.Entity("EFCore.Domain.HeroiBatalha", b =>
                {
                    b.Property<int>("batalhaId")
                        .HasColumnType("int");

                    b.Property<int>("heroiId")
                        .HasColumnType("int");

                    b.HasKey("batalhaId", "heroiId");

                    b.HasIndex("heroiId");

                    b.ToTable("HeroisBatalhas");
                });

            modelBuilder.Entity("EFCore.Domain.IdentidadeSecreta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("heroiId")
                        .HasColumnType("int");

                    b.Property<string>("nomeReal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("heroiId")
                        .IsUnique();

                    b.ToTable("IdentidadesSecretas");
                });

            modelBuilder.Entity("EFCore.Domain.Arma", b =>
                {
                    b.HasOne("EFCore.Domain.Heroi", "heroi")
                        .WithMany("armas")
                        .HasForeignKey("heroiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCore.Domain.HeroiBatalha", b =>
                {
                    b.HasOne("EFCore.Domain.Batalha", "batalha")
                        .WithMany("heroisBatalhas")
                        .HasForeignKey("batalhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCore.Domain.Heroi", "heroi")
                        .WithMany("heroisBatalhas")
                        .HasForeignKey("heroiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCore.Domain.IdentidadeSecreta", b =>
                {
                    b.HasOne("EFCore.Domain.Heroi", "heroi")
                        .WithOne("identidadeSecreta")
                        .HasForeignKey("EFCore.Domain.IdentidadeSecreta", "heroiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
